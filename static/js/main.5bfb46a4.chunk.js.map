{"version":3,"sources":["globalStyles.tsx","api/index.tsx","components/SearchBar/index.tsx","components/Days/Days.tsx","assets/cloudy.svg","assets/rain.svg","assets/snowing.svg","assets/thermometer.svg","components/Icon/Icon.tsx","components/Temp/Temp.tsx","components/WeatherBody/WeatherBody.tsx","assets/Spinner.gif","components/Loader/index.tsx","components/App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","axios","create","baseURL","SearchBarWrapper","styled","div","city","SearchBar","searchCity","useState","value","setValue","className","onSubmit","e","preventDefault","alert","type","name","id","onChange","target","placeholder","DaysWrapper","Days","day","IconWrapper","renderIcon","icon","src","Cloudy","alt","Rain","Snowing","Thermometer","Icon","TempWrapper","Temp","minTemp","maxTemp","WeatherBodyWrapper","WeatherBody","description","LoaderWrapper","Loader","message","Spinner","WeatherContainer","undefined","App","temp","setTemp","setCity","loading","setLoading","a","API","get","then","res","console","log","data","city_name","useEffect","map","t","parseInt","low_temp","max_temp","weather","code","Fragment","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5bfb46a4.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html,\r\n  body {\r\n    min-height: 100%;\r\n    font-family: 'Oswald',Open-Sans, Helvetica, Sans-Serif;\r\n  }\r\n\r\n  .App {\r\n  width: 100%;\r\n  height: 100vh;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n@media (min-width: 1399px) {\r\n  .App {\r\n    display: flex;\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.weatherbit.io/v2.0/forecast',\r\n});\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SearchBarWrapper = styled.div<SearchBarProps>`\r\n  width: 100%;\r\n  height: 30vh;\r\n  text-align: center;\r\n  background-image: url('https://images.unsplash.com/photo-1559060017-445fb9722f2a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80');\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  position: relative;\r\n\r\n  input {\r\n    border: 0;\r\n    height: 38px;\r\n    margin-right: 15px;\r\n    text-align: center;\r\n    border-bottom: 1px solid #17a2b8;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  input:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  .SearchBarChilds {\r\n    top: 50%;\r\n    left: 50%;\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  .SearchBarChilds .formSearchCity {\r\n    display: flex;\r\n  }\r\n\r\n  @media (min-width: 1399px) {\r\n    & {\r\n      width: ${({ city }) => (city ? '30%' : '100%')};\r\n      height: 100vh;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SearchBar: React.FC<SearchBarProps> = ({ city, searchCity }) => {\r\n  const [value, setValue] = useState(city);\r\n\r\n  const onChange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    value === '' ? alert('City can not be empty') : searchCity(value);\r\n  };\r\n\r\n  return (\r\n    <SearchBarWrapper city={city} searchCity={searchCity}>\r\n      <div className='SearchBarChilds'>\r\n        <h5 className='text-white'>Search weather on your city</h5>\r\n\r\n        <form onSubmit={handleFormSubmit}>\r\n          <input\r\n            type='text'\r\n            name='city'\r\n            id='inputSearchCity'\r\n            onChange={onChange}\r\n            placeholder={'Search City...'}\r\n          />\r\n          <button type='submit' className='btn btn-outline-info text-white'>\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </SearchBarWrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DaysWrapper = styled.div`\r\n  color: #b8b8b8;\r\n  margin: 15px 0;\r\n`;\r\n\r\nexport const Days: React.FC<DaysProps> = ({ day }) => {\r\n  return <DaysWrapper>{day}</DaysWrapper>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/cloudy.75e6c850.svg\";","export default __webpack_public_path__ + \"static/media/rain.de11ad59.svg\";","export default __webpack_public_path__ + \"static/media/snowing.80eba8a2.svg\";","export default __webpack_public_path__ + \"static/media/thermometer.194aaa54.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Cloudy from '../../assets/cloudy.svg';\r\nimport Rain from '../../assets/rain.svg';\r\nimport Snowing from '../../assets/snowing.svg';\r\nimport Thermometer from '../../assets/thermometer.svg';\r\n\r\nconst IconWrapper = styled.div`\r\n  img {\r\n    width: 50px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst renderIcon = (icon: number) => {\r\n  switch (icon) {\r\n    case 801:\r\n      return <img className='icon' src={Cloudy} alt={Cloudy} />;\r\n\r\n    case 802:\r\n      return <img className='icon' src={Cloudy} alt={Cloudy} />;\r\n\r\n    case 803:\r\n      return <img className='icon' src={Cloudy} alt={Cloudy} />;\r\n\r\n    case 200:\r\n      return <img className='icon' src={Rain} alt={Rain} />;\r\n\r\n    case 201:\r\n      return <img className='icon' src={Rain} alt={Rain} />;\r\n\r\n    case 202:\r\n      return <img className='icon' src={Rain} alt={Rain} />;\r\n\r\n    case 600:\r\n      return <img className='icon' src={Snowing} alt={Snowing} />;\r\n\r\n    case 601:\r\n      return <img className='icon' src={Snowing} alt={Snowing} />;\r\n\r\n    case 602:\r\n      return <img className='icon' src={Snowing} alt={Snowing} />;\r\n\r\n    case 610:\r\n      return <img className='icon' src={Snowing} alt={Snowing} />;\r\n\r\n    default:\r\n      return <img className='icon' src={Thermometer} alt={Thermometer} />;\r\n  }\r\n};\r\n\r\nexport const Icon: React.FC<IconProps> = ({ icon }) => {\r\n  return <IconWrapper>{renderIcon(icon)}</IconWrapper>;\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TempWrapper = styled.div`\r\n  margin: 18px 0;\r\n  font-size: 14px;\r\n  color: #212529;\r\n\r\n  span {\r\n    margin: 0 3px;\r\n  }\r\n\r\n  .min {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const Temp: React.FC<TempProps> = ({ minTemp, maxTemp }) => {\r\n  return (\r\n    <TempWrapper>\r\n      <span className='min'>{minTemp}&#176;</span>\r\n      <span className='max'>{maxTemp}&#176;</span>\r\n    </TempWrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Days } from '../Days/Days';\r\nimport { Icon } from '../Icon/Icon';\r\nimport { Temp } from '../Temp/Temp';\r\n\r\nconst WeatherBodyWrapper = styled.div`\r\n  .WeatherBody {\r\n    margin: 0 15px;\r\n    padding: 10px 50px;\r\n    transition: 0.3s all ease;\r\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3),\r\n      0 0 40px rgba(128, 128, 128, 0.1) inset;\r\n  }\r\n\r\n  .WeatherBody:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0 15px 10px -10px rgba(31, 31, 31, 0.5);\r\n  }\r\n`;\r\n\r\nconst WeatherBody: React.FC<WeatherBodyProps> = ({\r\n  day,\r\n  icon,\r\n  minTemp,\r\n  maxTemp,\r\n  description,\r\n}) => {\r\n  return (\r\n    <WeatherBodyWrapper>\r\n      <div className='WeatherBody card'>\r\n        <Days day={day} />\r\n        <Icon icon={icon} />\r\n        <Temp minTemp={minTemp} maxTemp={maxTemp} description={description} />\r\n      </div>\r\n    </WeatherBodyWrapper>\r\n  );\r\n};\r\n\r\nexport default WeatherBody;\r\n","export default __webpack_public_path__ + \"static/media/Spinner.0f8e3ead.gif\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Spinner from '../../assets/Spinner.gif';\r\n\r\nconst LoaderWrapper = styled.div`\r\n  top: 50%;\r\n  left: 50%;\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n\r\n  img {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n`;\r\n\r\nexport const Loader: React.FC<LoaderProps> = ({ message }) => {\r\n  return (\r\n    <LoaderWrapper className='Loader'>\r\n      <img src={Spinner} alt='Spinner' />\r\n      <h6 className='text-center-mt-3'>{message}</h6>\r\n    </LoaderWrapper>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../globalStyles';\r\nimport API from '../api';\r\nimport { SearchBar } from './SearchBar';\r\nimport WeatherBody from './WeatherBody/WeatherBody';\r\nimport { Loader } from './Loader';\r\n\r\nconst WeatherContainer = styled.div<{ city: string }>`\r\n  width: 100%;\r\n  background: rgb(249, 157, 149);\r\n  background: -moz-linear-gradient(\r\n    90deg,\r\n    rgba(249, 157, 149, 1) 20%,\r\n    rgba(218, 107, 115, 1) 50%,\r\n    rgba(207, 99, 103, 1) 100%\r\n  );\r\n  background: -webkit-linear-gradient(\r\n    90deg,\r\n    rgba(249, 157, 149, 1) 20%,\r\n    rgba(218, 107, 115, 1) 50%,\r\n    rgba(207, 99, 103, 1) 100%\r\n  );\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(249, 157, 149, 1) 20%,\r\n    rgba(218, 107, 115, 1) 50%,\r\n    rgba(207, 99, 103, 1) 100%\r\n  );\r\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#f99d95\",endColorstr=\"#cf6367\",GradientType=1);\r\n\r\n  .cityName {\r\n    display: none;\r\n  }\r\n\r\n  @media (min-width: 1399px) {\r\n    width: ${({ city }) => (city ? '70%' : undefined)};\r\n    height: 100vh;\r\n    display: ${({ city }) => (city ? 'flex' : 'none')};\r\n    text-align: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .cityName {\r\n      display: block;\r\n      position: absolute;\r\n      top: 100px;\r\n      text-transform: uppercase;\r\n      letter-spacing: 5px;\r\n      color: #fff;\r\n      font-size: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const [temp, setTemp] = useState<TempProps[]>([]);\r\n  const [city, setCity] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const searchCity = async (city: string) => {\r\n    setLoading(true);\r\n    await API.get(\r\n      `daily?city=${city}&key=3883f69ab25f46dc92cdf2b5d66a1517`\r\n    ).then(res => {\r\n      console.log(res.data.data);\r\n      setTemp(res.data.data);\r\n      setCity(res.data.city_name);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchCity(city);\r\n    setLoading(false);\r\n  }, [city]);\r\n\r\n  const minTemp =\r\n    temp &&\r\n    temp.map((t: any): number => {\r\n      return parseInt(t.low_temp);\r\n    });\r\n\r\n  const maxTemp =\r\n    temp &&\r\n    temp.map((t: any): number => {\r\n      return parseInt(t.max_temp);\r\n    });\r\n\r\n  const icon =\r\n    temp &&\r\n    temp.map((t: any): number => {\r\n      return t.weather.code;\r\n    });\r\n\r\n  const description =\r\n    temp &&\r\n    temp.map((t: any): string => {\r\n      return t.weather.description;\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      {loading ? (\r\n        <div>\r\n          <Loader message={'Loading data...'} />\r\n        </div>\r\n      ) : (\r\n        <div className='App'>\r\n          <React.Fragment>\r\n            <SearchBar city={city} searchCity={searchCity} />\r\n          </React.Fragment>\r\n          <WeatherContainer city={city} className='pt-3 pb-3'>\r\n            {city && <h5 className='cityName'>{city}</h5>}\r\n            <WeatherBody\r\n              day={'Mon'}\r\n              icon={icon[0]}\r\n              minTemp={minTemp[0]}\r\n              maxTemp={maxTemp[0]}\r\n              description={description[0]}\r\n            />\r\n            <WeatherBody\r\n              day={'Tue'}\r\n              icon={icon[1]}\r\n              minTemp={minTemp[1]}\r\n              maxTemp={maxTemp[1]}\r\n              description={description[1]}\r\n            />\r\n            <WeatherBody\r\n              day={'Wed'}\r\n              icon={icon[2]}\r\n              minTemp={minTemp[2]}\r\n              maxTemp={maxTemp[2]}\r\n              description={description[2]}\r\n            />\r\n            <WeatherBody\r\n              day={'Thu'}\r\n              icon={icon[3]}\r\n              minTemp={minTemp[3]}\r\n              maxTemp={maxTemp[3]}\r\n              description={description[3]}\r\n            />\r\n            <WeatherBody\r\n              day={'Fri'}\r\n              icon={icon[4]}\r\n              minTemp={minTemp[4]}\r\n              maxTemp={maxTemp[4]}\r\n              description={description[4]}\r\n            />\r\n          </WeatherContainer>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}