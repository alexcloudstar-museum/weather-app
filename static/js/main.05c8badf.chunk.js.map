{"version":3,"sources":["assets/thermometer.svg","assets/Spinner.gif","assets/snowing.svg","assets/cloudy.svg","assets/rain.svg","assets/sun.svg","apis/api.js","components/Days/Days.js","components/Icon/Icon.js","components/Temp/Temp.js","components/WeatherBody/WeatherBody.js","components/Loader/Loader.js","components/SearchBar/SearchBar.js","components/App.js","index.js"],"names":["module","exports","axios","create","baseURL","Days","props","className","day","Icon","icon","src","Cloudy","alt","Rain","Snowing","Fragment","Thermometer","description","Temp","minTemp","maxTemp","WeatherBody","Loader","Spinner","msg","SearchBar","state","city","onSubmit","e","preventDefault","alert","searchCity","setState","onChange","target","name","value","this","type","id","placeholder","React","Component","App","a","weather","get","then","res","temp","data","city_name","isLoaded","map","el","parseInt","low_temp","max_temp","code","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.05c8badf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thermometer.c25afb20.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spinner.032bf6d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/snowing.5831cc74.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.cfb1e955.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.5ee170bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.ef790a4b.svg\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.weatherbit.io/v2.0/forecast\"\r\n});\r\n","import React from \"react\";\r\nimport \"./Days.css\";\r\n\r\nconst Days = props => {\r\n  return <div className=\"Days\">{props.day}</div>;\r\n};\r\n\r\nexport default Days;\r\n","import React from \"react\";\r\nimport \"./Icon.css\";\r\nimport Cloudy from \"../../assets/cloudy.svg\";\r\nimport Rain from \"../../assets/rain.svg\";\r\nimport Snowing from \"../../assets/snowing.svg\";\r\nimport Sun from \"../../assets/sun.svg\";\r\nimport Thermometer from \"../../assets/thermometer.svg\";\r\n\r\nconst Icon = props => {\r\n  switch (props.icon) {\r\n    case 801:\r\n      return <img className=\"icon\" src={Cloudy} alt={Cloudy} />;\r\n      break;\r\n    case 802:\r\n      return <img className=\"icon\" src={Cloudy} alt={Cloudy} />;\r\n      break;\r\n    case 803:\r\n      return <img className=\"icon\" src={Cloudy} alt={Cloudy} />;\r\n      break;\r\n    case 200:\r\n      return <img className=\"icon\" src={Rain} alt={Rain} />;\r\n      break;\r\n    case 201:\r\n      return <img className=\"icon\" src={Rain} alt={Rain} />;\r\n      break;\r\n    case 202:\r\n      return <img className=\"icon\" src={Rain} alt={Rain} />;\r\n      break;\r\n    case 600:\r\n      return <img className=\"icon\" src={Snowing} alt={Snowing} />;\r\n      break;\r\n    case 601:\r\n      return <img className=\"icon\" src={Snowing} alt={Snowing} />;\r\n      break;\r\n    case 602:\r\n      return <img className=\"icon\" src={Snowing} alt={Snowing} />;\r\n      break;\r\n    case 610:\r\n      return <img className=\"icon\" src={Snowing} alt={Snowing} />;\r\n      break;\r\n    default:\r\n      return (\r\n        <React.Fragment>\r\n          <img className=\"icon\" src={Thermometer} alt={Thermometer} />\r\n          <h5>{props.description}</h5>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react'\r\nimport './Temp.css'\r\n\r\nconst Temp = props => {\r\n    return <div className=\"Temp\">\r\n        <span className=\"min\">{props.minTemp}&#176;</span>\r\n        <span className=\"max\">{props.maxTemp}&#176;</span>\r\n    </div>\r\n}\r\n\r\nexport default Temp;","import React from \"react\";\r\nimport \"./WeatherBody.css\";\r\nimport Days from \"../Days/Days\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport Temp from \"../Temp/Temp\";\r\n\r\nconst WeatherBody = props => {\r\n  return (\r\n    <div className=\"WeatherBody card\">\r\n      <Days day={props.day} />\r\n      <Icon icon={props.icon} />\r\n      <Temp minTemp={props.minTemp} maxTemp={props.maxTemp} description={props.description} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherBody;\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\nimport Spinner from \"../../assets/Spinner.gif\";\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <img src={Spinner} alt={Spinner} />\r\n      <h6 className=\"text-center-mt-3\">{props.msg}</h6>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    city: \"\"\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.city === \"\") {\r\n      alert(\"City can not be empty\");\r\n    } else {\r\n      this.props.searchCity(this.state.city);\r\n    }\r\n\r\n    this.setState({ city: \"\" });\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBarChilds\">\r\n          <h5 className=\"text-white\">Search weather on your city</h5>\r\n\r\n          <form onSubmit={this.onSubmit} className=\"formSearchCity\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"city\"\r\n              id=\"inputSearchCity\"\r\n              onChange={this.onChange}\r\n              placeholder=\"Search City...\"\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-outline-info text-white\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport weather from \"../apis/api\";\r\nimport WeatherBody from \"./WeatherBody/WeatherBody\";\r\nimport Loader from \"./Loader/Loader\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      temp: [],\r\n      city: null,\r\n      isLoaded: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoaded: true });\r\n  }\r\n\r\n  searchCity = async city => {\r\n    await weather\r\n      .get(`daily?city=${city}&key=3883f69ab25f46dc92cdf2b5d66a1517`)\r\n      .then(res => {\r\n        const temp = res.data.data;\r\n        const city = res.data.city_name;\r\n\r\n        this.setState({\r\n          temp,\r\n          city\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // Methods\r\n\r\n    const minTemp = this.state.temp.map(el => {\r\n      return parseInt(el.low_temp);\r\n    });\r\n\r\n    const maxTemp = this.state.temp.map(el => {\r\n      return parseInt(el.max_temp);\r\n    });\r\n\r\n    const icon = this.state.temp.map(el => {\r\n      return el.weather.code;\r\n    });\r\n\r\n    const description = this.state.temp.map(el => {\r\n      return el.weather.description;\r\n    });\r\n\r\n    // Loader\r\n    if (!this.state.isLoaded) {\r\n      return <Loader msg={\"Loading...\"} />;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <React.Fragment>\r\n          <SearchBar city={this.state.city} searchCity={this.searchCity} />\r\n        </React.Fragment>\r\n        <div className=\"weatherContainer pt-3 pb-3\">\r\n          <h5 className=\"cityName\">{this.state.city}</h5>\r\n          <WeatherBody day={\"Mon\"} icon={icon[0]} minTemp={minTemp[0]} maxTemp={maxTemp[0]} description={description[0]} />\r\n          <WeatherBody day={\"Tue\"} icon={icon[1]} minTemp={minTemp[1]} maxTemp={maxTemp[1]} description={description[1]} />\r\n          <WeatherBody day={\"Wed\"} icon={icon[2]} minTemp={minTemp[2]} maxTemp={maxTemp[2]} description={description[2]} />\r\n          <WeatherBody day={\"Thu\"} icon={icon[3]} minTemp={minTemp[3]} maxTemp={maxTemp[3]} description={description[3]} />\r\n          <WeatherBody day={\"Fri\"} icon={icon[4]} minTemp={minTemp[4]} maxTemp={maxTemp[4]} description={description[4]} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}